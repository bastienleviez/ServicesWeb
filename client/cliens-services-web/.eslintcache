[{"C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\index.js":"1","C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\reportWebVitals.js":"2","C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\App.js":"3","C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\testComponent.js":"4","C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\TestComponent.js":"5","C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\ListeFilmComponent.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":335,"mtime":1616058413327,"results":"10","hashOfConfig":"8"},{"size":823,"mtime":1611929474537,"results":"11","hashOfConfig":"8"},{"size":752,"mtime":1614328805160,"results":"12","hashOfConfig":"8"},{"size":5781,"mtime":1617318472089,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"accexg",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\index.js",[],["30","31"],"C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\reportWebVitals.js",[],"C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\App.js",["32","33"],"import logo from './logo.svg';\nimport './App.css';\nimport {TestComponent} from './TestComponent.js'\nimport {ListeFilmComponent} from \"./ListeFilmComponent\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <body>\n      <ListeFilmComponent>\n\n      </ListeFilmComponent>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\testComponent.js",[],["34","35"],"C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\TestComponent.js",[],"C:\\Users\\levie\\Documents\\EPSI\\B3\\ServicesWeb\\cliens-services-web\\src\\ListeFilmComponent.js",["36","37","38","39","40"],"import * as React from 'react';\r\nimport './ListeFilmComponent.css';\r\nimport { DetailsList, DetailsListLayoutMode, SelectionMode} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { IconButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { initializeIcons, IIconProps } from 'office-ui-fabric-react/lib/Icons';\r\nimport { TextField } from 'office-ui-fabric-react';\r\n\r\n\r\nconst headerStyle = {\r\n    cellTitle: {\r\n        color: \"#c71f20\",\r\n        background: \"#131313\"\r\n    }\r\n}\r\nconst caseStyle = {\r\n    cellTitle: {\r\n        color: \"#ffffff\",\r\n        background: \"#131313\"\r\n    }\r\n}\r\nconst listStyle = {\r\n    root:{\r\n        background:\"#131313\"\r\n    }\r\n}\r\n\r\nexport class ListeFilmComponent extends React.Component {\r\n\r\n    _columns;\r\n\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this._columns = [\r\n            { key: 'column1', name: 'Titre ', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column2', name: 'Description', fieldName: 'desc', minWidth: 100, maxWidth: 200, isResizable: true },\r\n\r\n        ];\r\n\r\n        this.state = {\r\n            isLoaded: false,\r\n            retourApi: \"rien\",\r\n            listeFilms : [],\r\n            listeFilmsAffichage: [],\r\n            afficherPanelFilm: false,\r\n            filmChoisi: null,\r\n            urlImage:\"\",\r\n            search: \"\"\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        initializeIcons();\r\n        fetch(\"https://localhost:44373/Home\"\r\n        ).then(res => {\r\n            res.json().then(retourJson => {\r\n                let listeTemp = [];\r\n                let listeTempAffichage = [];\r\n                retourJson.results.forEach(result => {\r\n                    console.log(result)\r\n                    let filmAAfficher = {styles: caseStyle, name: result.title, desc:result.overview}\r\n                    listeTempAffichage.push(filmAAfficher)\r\n                    listeTemp.push(result);\r\n                })\r\n                this.setState({\r\n                    listeFilms: listeTemp,\r\n                    listeFilmsAffichage: listeTempAffichage\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    _onItemInvoked = (item) => {\r\n        let listeDesFilms = this.state.listeFilms;\r\n        listeDesFilms.forEach(film => {\r\n            if (film.title == item.name){\r\n                this.setState({\r\n                    filmChoisi: film,\r\n                    afficherPanelFilm: true,\r\n                    urlImage : \"https://www.themoviedb.org/t/p/w440_and_h660_face\" + film.backdrop_path\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    _onDismiss = () => {\r\n        this.setState({\r\n            afficherPanelFilm: false,\r\n            filmChoisi: null,\r\n            urlImage: \"\"\r\n      })\r\n    }\r\n\r\n    _onClickLike = () => {\r\n        console.log(\"KLIK\")\r\n    }\r\n\r\n    _onChangeSearch = (event, newValue) =>\r\n    {\r\n        this.setState({\r\n            search : newValue\r\n        })\r\n    }\r\n\r\n    _onClickSearch= () => {\r\n        let url = \"https://localhost:44373/Search&query=\" + this.state.search\r\n        fetch(url).then(res => {\r\n            res.json().then(retourJson => {\r\n                let listeTemp = [];\r\n                let listeTempAffichage = [];\r\n                retourJson.results.forEach(result => {\r\n                    console.log(result)\r\n                    let filmAAfficher = {styles: caseStyle, name: result.title, desc:result.overview}\r\n                    listeTempAffichage.push(filmAAfficher)\r\n                    listeTemp.push(result);\r\n            })\r\n                    this.setState({\r\n                        listeFilms: listeTemp,\r\n                        listeFilmsAffichage: listeTempAffichage\r\n                    })\r\n        })\r\n    })\r\n}\r\n\r\n    render() {\r\n\r\n            if (!this.state.isLoaded){\r\n                return (\r\n                    \r\n                    <React.Fragment>\r\n\r\n                         <TextField label=\"Recherche\" onChange={this._onChangeSearch} /><IconButton iconProps={{ iconName: 'Search' }} title=\"Search\" ariaLabel=\"Search\" \r\n                            onClick={this._onClickSearch}\r\n                            />\r\n                         <Panel //Panel que l'on peut fermer en cliquant partout ailleurs\r\n                            isLightDismiss\r\n                            isOpen={this.state.afficherPanelFilm}\r\n                            onDismiss={this._onDismiss}\r\n                            headerText={this.state.filmChoisi ? this.state.filmChoisi.title : \"\"}\r\n                            type={PanelType.medium}\r\n\r\n                        >\r\n                            <IconButton iconProps={{ iconName: 'Like' }} title=\"Like\" ariaLabel=\"Like\" \r\n                            onClick={this._onClickLike}\r\n                            /><p>3 likes</p>\r\n                            <p>{this.state.filmChoisi ? this.state.filmChoisi.overview : \"\"}</p>\r\n                            <img src={this.state.urlImage}></img>\r\n                    </Panel>\r\n                    \r\n                    <DetailsList //Liste des films\r\n                        items={this.state.listeFilmsAffichage}\r\n                        columns={this._columns}\r\n                        setKey=\"set\"\r\n                        selectionMode = {SelectionMode.none}\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        onItemInvoked={this._onItemInvoked}\r\n                        styles={listStyle}\r\n                    />\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (<p>yo</p>)\r\n            }\r\n        }\r\n\r\n\r\n}\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":3,"column":9,"nodeType":"47","messageId":"48","endLine":3,"endColumn":22},{"ruleId":"41","replacedBy":"50"},{"ruleId":"43","replacedBy":"51"},{"ruleId":"45","severity":1,"message":"52","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":18},{"ruleId":"45","severity":1,"message":"53","line":7,"column":27,"nodeType":"47","messageId":"48","endLine":7,"endColumn":37},{"ruleId":"45","severity":1,"message":"54","line":11,"column":7,"nodeType":"47","messageId":"48","endLine":11,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":79,"column":28,"nodeType":"57","messageId":"58","endLine":79,"endColumn":30},{"ruleId":"59","severity":1,"message":"60","line":150,"column":29,"nodeType":"61","endLine":150,"endColumn":60},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'TestComponent' is defined but never used.",["62"],["63"],"'Dropdown' is defined but never used.","'IIconProps' is defined but never used.","'headerStyle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]